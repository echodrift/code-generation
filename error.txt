contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________

ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_39.sol:6:29: DeclarationError: Identifier not found or not unique.
contract DfWalletFactory is Ownable, CloneFactory {
                            ^-----^
___________________________________________________________________________
contracts/sample_39.sol:6:38: DeclarationError: Identifier not found or not unique.
contract DfWalletFactory is Ownable, CloneFactory {
                                     ^----------^
___________________________________________________________________________
contracts/sample_39.sol:16:64: DeclarationError: Undeclared identifier.
    function setLibraryAddress(address _libraryAddress) public onlyOwner {
                                                               ^-------^
___________________________________________________________________________

DeclarationError: Identifier not found or not unique.
 --> contracts/sample_2.sol:1:22:
  |
1 | contract Strategy is BaseStrategyInitializable {
  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^
___________________________________________________________________________
contracts/sample_60.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________

DeclarationError: Identifier not found or not unique.
  --> contracts/sample_24.sol:14:30:
   |
14 | abstract contract Ownable is Context {
   |                              ^^^^^^^
___________________________________________________________________________
contracts/sample_61.sol:37:5: DeclarationError: Identifier not found or not unique.
    Avatar public avatar;
    ^----^
___________________________________________________________________________
contracts/sample_61.sol:38:5: DeclarationError: Identifier not found or not unique.
    DAOToken public nativeToken;
    ^------^
___________________________________________________________________________
contracts/sample_61.sol:39:5: DeclarationError: Identifier not found or not unique.
    Reputation public nativeReputation;
    ^--------^
___________________________________________________________________________
contracts/sample_61.sol:62:9: DeclarationError: Identifier not found or not unique.
        GlobalConstraintInterface.CallPhase _when);
        ^---------------------------------^
___________________________________________________________________________
contracts/sample_61.sol:66:18: DeclarationError: Identifier not found or not unique.
    constructor( Avatar _avatar) public {
                 ^----^
___________________________________________________________________________
contracts/sample_61.sol:351:56: DeclarationError: Identifier not found or not unique.
    function upgradeController(address _newController, Avatar _avatar)
                                                       ^----^
___________________________________________________________________________
contracts/sample_61.sol:383:67: DeclarationError: Identifier not found or not unique.
    function genericCall(address _contract, bytes calldata _data, Avatar _avatar, uint256 _value)
                                                                  ^----^
___________________________________________________________________________
contracts/sample_61.sol:399:67: DeclarationError: Identifier not found or not unique.
    function sendEther(uint256 _amountInWei, address payable _to, Avatar _avatar)
                                                                  ^----^
___________________________________________________________________________
contracts/sample_61.sol:416:36: DeclarationError: Identifier not found or not unique.
    function externalTokenTransfer(IERC20 _externalToken, address _to, uint256 _value, Avatar _avatar)
                                   ^----^
___________________________________________________________________________
contracts/sample_61.sol:437:5: DeclarationError: Identifier not found or not unique.
    IERC20 _externalToken,
    ^----^
___________________________________________________________________________
contracts/sample_61.sol:459:36: DeclarationError: Identifier not found or not unique.
    function externalTokenApproval(IERC20 _externalToken, address _spender, uint256 _value, Avatar _avatar)
                                   ^----^
___________________________________________________________________________
contracts/sample_61.sol:475:50: DeclarationError: Identifier not found or not unique.
    function metaData(string calldata _metaData, Avatar _avatar)
                                                 ^----^
___________________________________________________________________________

DeclarationError: Identifier not found or not unique.
  --> contracts/sample_29.sol:10:19:
   |
10 | contract WAGYU is Context, IERC20, IERC20Metadata, Ownable {
   |                   ^^^^^^^
___________________________________________________________________________
contracts/sample_62.sol:7:36: DeclarationError: Identifier not found or not unique.
contract VotingMachineCallbacks is VotingMachineCallbacksInterface {
                                   ^-----------------------------^
___________________________________________________________________________
contracts/sample_62.sol:11:9: DeclarationError: Identifier not found or not unique.
        Avatar avatar; // the proposal's avatar
        ^----^
___________________________________________________________________________
contracts/sample_62.sol:55:9: DeclarationError: Identifier not found or not unique.
        IERC20 _stakingToken,
        ^----^
___________________________________________________________________________
contracts/sample_62.sol:70:36: DeclarationError: Identifier not found or not unique.
    function balanceOfStakingToken(IERC20 _stakingToken, bytes32 _proposalId) external view returns(uint256) {
                                   ^----^
___________________________________________________________________________

DeclarationError: Identifier not found or not unique.
  --> contracts/sample_53.sol:77:11:
   |
77 |     using SafeMath for uint256;
   |           ^^^^^^^^
___________________________________________________________________________
contracts/sample_63.sol:25:9: DeclarationError: Identifier not found or not unique.
        Avatar _avatar)
        ^----^
___________________________________________________________________________
contracts/sample_63.sol:40:9: DeclarationError: Identifier not found or not unique.
        Avatar _avatar)
        ^----^
___________________________________________________________________________

DeclarationError: Identifier not found or not unique.
 --> contracts/sample_55.sol:2:23:
  |
2 | contract SojuToken is ERC20("SojuToken", "Soju"), Ownable {
  |                       ^^^^^
___________________________________________________________________________
contracts/sample_84.sol:30:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is Context, IERC20 {
                  ^-----^
___________________________________________________________________________
contracts/sample_84.sol:30:28: DeclarationError: Identifier not found or not unique.
contract ERC20 is Context, IERC20 {
                           ^----^
___________________________________________________________________________
contracts/sample_84.sol:31:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________

DeclarationError: Identifier not found or not unique.
 --> contracts/sample_71.sol:3:21:
  |
3 | contract ISnowed is Ownable {
  |                     ^^^^^^^
___________________________________________________________________________

TypeError: Explicit type conversion not allowed from "address" to "uint256".
   --> contracts/sample_54.sol:145:41:
    |
145 |         return _add(set._inner, bytes32(uint256(value)));
    |                                         ^^^^^^^^^^^^^^
___________________________________________________________________________

TypeError: Explicit type conversion not allowed from "address" to "uint256".
   --> contracts/sample_54.sol:155:44:
    |
155 |         return _remove(set._inner, bytes32(uint256(value)));
    |                                            ^^^^^^^^^^^^^^
___________________________________________________________________________

TypeError: Explicit type conversion not allowed from "address" to "uint256".
   --> contracts/sample_54.sol:162:46:
    |
162 |         return _contains(set._inner, bytes32(uint256(value)));
    |                                              ^^^^^^^^^^^^^^
___________________________________________________________________________

TypeError: Explicit type conversion not allowed from "uint256" to "address".
   --> contracts/sample_54.sol:183:16:
    |
183 |         return address(uint256(_at(set._inner, index)));
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
___________________________________________________________________________
ParserError: Expected ';' but got '}'
  --> contracts/sample_13.sol:11:60:
   |
11 |     modifier onlyOwner { if (msg.sender != owner) throw; _ }
   |                                                            ^
___________________________________________________________________________

ParserError: Expected '{' but got 'constant'
 --> contracts/sample_75.sol:3:28:
  |
3 |     function totalSupply() constant returns (uint256 supply) {}
  |                            ^^^^^^^^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
   --> contracts/sample_79.sol:146:32:
    |
146 |   function () external payable {
    |                                ^
___________________________________________________________________________

ParserError: Expected a state variable declaration. If you intended this as a fallback function or a function to handle plain ether transactions, use the "fallback" keyword or the "receive" keyword instead.
  --> contracts/sample_80.sol:46:30:
   |
46 |     function() public payable{}
   |                              ^
___________________________________________________________________________

ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
 --> contracts/sample_92.sol:1:1:
  |
1 | @v4.5.0
  | ^
___________________________________________________________________________
contracts/sample_47.sol:5:26: DeclarationError: Identifier not found or not unique.
contract SpaceReavers is ERC721,Ownable {
                         ^----^
___________________________________________________________________________
contracts/sample_20.sol:17:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is IERC20 {
                  ^----^
___________________________________________________________________________
contracts/sample_20.sol:18:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________
contracts/sample_77.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________
contracts/sample_39.sol:6:29: DeclarationError: Identifier not found or not unique.
contract DfWalletFactory is Ownable, CloneFactory {
                            ^-----^
___________________________________________________________________________
contracts/sample_39.sol:6:38: DeclarationError: Identifier not found or not unique.
contract DfWalletFactory is Ownable, CloneFactory {
                                     ^----------^
___________________________________________________________________________
contracts/sample_39.sol:16:64: DeclarationError: Undeclared identifier.
    function setLibraryAddress(address _libraryAddress) public onlyOwner {
                                                               ^-------^
___________________________________________________________________________

DeclarationError: Identifier not found or not unique.
 --> contracts/sample_2.sol:1:22:
  |
1 | contract Strategy is BaseStrategyInitializable {
  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^
___________________________________________________________________________
contracts/sample_60.sol:20:11: DeclarationError: Identifier not found or not unique.
    using Address for address;
          ^-----^
___________________________________________________________________________

DeclarationError: Identifier not found or not unique.
  --> contracts/sample_24.sol:14:30:
   |
14 | abstract contract Ownable is Context {
   |                              ^^^^^^^
___________________________________________________________________________
contracts/sample_61.sol:37:5: DeclarationError: Identifier not found or not unique.
    Avatar public avatar;
    ^----^
___________________________________________________________________________
contracts/sample_61.sol:38:5: DeclarationError: Identifier not found or not unique.
    DAOToken public nativeToken;
    ^------^
___________________________________________________________________________
contracts/sample_61.sol:39:5: DeclarationError: Identifier not found or not unique.
    Reputation public nativeReputation;
    ^--------^
___________________________________________________________________________
contracts/sample_61.sol:62:9: DeclarationError: Identifier not found or not unique.
        GlobalConstraintInterface.CallPhase _when);
        ^---------------------------------^
___________________________________________________________________________
contracts/sample_61.sol:66:18: DeclarationError: Identifier not found or not unique.
    constructor( Avatar _avatar) public {
                 ^----^
___________________________________________________________________________
contracts/sample_61.sol:351:56: DeclarationError: Identifier not found or not unique.
    function upgradeController(address _newController, Avatar _avatar)
                                                       ^----^
___________________________________________________________________________
contracts/sample_61.sol:383:67: DeclarationError: Identifier not found or not unique.
    function genericCall(address _contract, bytes calldata _data, Avatar _avatar, uint256 _value)
                                                                  ^----^
___________________________________________________________________________
contracts/sample_61.sol:399:67: DeclarationError: Identifier not found or not unique.
    function sendEther(uint256 _amountInWei, address payable _to, Avatar _avatar)
                                                                  ^----^
___________________________________________________________________________
contracts/sample_61.sol:416:36: DeclarationError: Identifier not found or not unique.
    function externalTokenTransfer(IERC20 _externalToken, address _to, uint256 _value, Avatar _avatar)
                                   ^----^
___________________________________________________________________________
contracts/sample_61.sol:437:5: DeclarationError: Identifier not found or not unique.
    IERC20 _externalToken,
    ^----^
___________________________________________________________________________
contracts/sample_61.sol:459:36: DeclarationError: Identifier not found or not unique.
    function externalTokenApproval(IERC20 _externalToken, address _spender, uint256 _value, Avatar _avatar)
                                   ^----^
___________________________________________________________________________
contracts/sample_61.sol:475:50: DeclarationError: Identifier not found or not unique.
    function metaData(string calldata _metaData, Avatar _avatar)
                                                 ^----^
___________________________________________________________________________

DeclarationError: Identifier not found or not unique.
  --> contracts/sample_29.sol:10:19:
   |
10 | contract WAGYU is Context, IERC20, IERC20Metadata, Ownable {
   |                   ^^^^^^^
___________________________________________________________________________
contracts/sample_62.sol:7:36: DeclarationError: Identifier not found or not unique.
contract VotingMachineCallbacks is VotingMachineCallbacksInterface {
                                   ^-----------------------------^
___________________________________________________________________________
contracts/sample_62.sol:11:9: DeclarationError: Identifier not found or not unique.
        Avatar avatar; // the proposal's avatar
        ^----^
___________________________________________________________________________
contracts/sample_62.sol:55:9: DeclarationError: Identifier not found or not unique.
        IERC20 _stakingToken,
        ^----^
___________________________________________________________________________
contracts/sample_62.sol:70:36: DeclarationError: Identifier not found or not unique.
    function balanceOfStakingToken(IERC20 _stakingToken, bytes32 _proposalId) external view returns(uint256) {
                                   ^----^
___________________________________________________________________________

DeclarationError: Identifier not found or not unique.
  --> contracts/sample_53.sol:77:11:
   |
77 |     using SafeMath for uint256;
   |           ^^^^^^^^
___________________________________________________________________________
contracts/sample_63.sol:25:9: DeclarationError: Identifier not found or not unique.
        Avatar _avatar)
        ^----^
___________________________________________________________________________
contracts/sample_63.sol:40:9: DeclarationError: Identifier not found or not unique.
        Avatar _avatar)
        ^----^
___________________________________________________________________________

DeclarationError: Identifier not found or not unique.
 --> contracts/sample_55.sol:2:23:
  |
2 | contract SojuToken is ERC20("SojuToken", "Soju"), Ownable {
  |                       ^^^^^
___________________________________________________________________________
contracts/sample_84.sol:30:19: DeclarationError: Identifier not found or not unique.
contract ERC20 is Context, IERC20 {
                  ^-----^
___________________________________________________________________________
contracts/sample_84.sol:30:28: DeclarationError: Identifier not found or not unique.
contract ERC20 is Context, IERC20 {
                           ^----^
___________________________________________________________________________
contracts/sample_84.sol:31:11: DeclarationError: Identifier not found or not unique.
    using SafeMath for uint256;
          ^------^
___________________________________________________________________________

DeclarationError: Identifier not found or not unique.
 --> contracts/sample_71.sol:3:21:
  |
3 | contract ISnowed is Ownable {
  |                     ^^^^^^^
___________________________________________________________________________

TypeError: Explicit type conversion not allowed from "address" to "uint256".
   --> contracts/sample_54.sol:145:41:
    |
145 |         return _add(set._inner, bytes32(uint256(value)));
    |                                         ^^^^^^^^^^^^^^
___________________________________________________________________________

TypeError: Explicit type conversion not allowed from "address" to "uint256".
   --> contracts/sample_54.sol:155:44:
    |
155 |         return _remove(set._inner, bytes32(uint256(value)));
    |                                            ^^^^^^^^^^^^^^
___________________________________________________________________________

TypeError: Explicit type conversion not allowed from "address" to "uint256".
   --> contracts/sample_54.sol:162:46:
    |
162 |         return _contains(set._inner, bytes32(uint256(value)));
    |                                              ^^^^^^^^^^^^^^
___________________________________________________________________________

TypeError: Explicit type conversion not allowed from "uint256" to "address".
   --> contracts/sample_54.sol:183:16:
    |
183 |         return address(uint256(_at(set._inner, index)));
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
___________________________________________________________________________
